/******************************************************************************/
/*
  Project - Unity CJ Lib
            https://github.com/TheAllenChou/unity-cj-lib
  
  Author  - Ming-Lun "Allen" Chou
  Web     - http://AllenChou.net
  Twitter - @TheAllenChou
*/
/******************************************************************************/

#pragma kernel ClassicPeriodic1
#pragma kernel ClassicPeriodic2
#pragma kernel ClassicPeriodic3

#include "../ClassicNoise2D.cginc"
#include "../ClassicNoise3D.cginc"

RWStructuredBuffer<float> buffer;

float seed;
int3 dimension;
float3 scale;
float3 offset;
float3 period;
int numOctaves;
float octaveOffsetFactor;

[numthreads(1, 1, 1)]
void ClassicPeriodic1(uint3 id : SV_DispatchThreadID)
{
  buffer[id.x] = 
    pnoise(scale.x * float2(seed, 0.0), float2(offset.x, 0.0), float2(period.x, period.x) , numOctaves, octaveOffsetFactor);
}

[numthreads(1, 1, 1)]
void ClassicPeriodic2(uint3 id : SV_DispatchThreadID)
{
  buffer[id.y * dimension.y + id.x] = 
    pnoise(scale.xy * seed, offset.xy, period.xy, numOctaves, octaveOffsetFactor);
}

[numthreads(1, 1, 1)]
void ClassicPeriodic3(uint3 id : SV_DispatchThreadID)
{
  buffer[((id.z * dimension.z + id.y) * dimension.y) + id.x] = 
    pnoise(scale * seed, offset, period, numOctaves, octaveOffsetFactor);
}
