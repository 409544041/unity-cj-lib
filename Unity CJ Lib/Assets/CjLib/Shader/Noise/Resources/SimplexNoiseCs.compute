/******************************************************************************/
/*
  Project - Unity CJ Lib
            https://github.com/TheAllenChou/unity-cj-lib
  
  Author  - Ming-Lun "Allen" Chou
  Web     - http://AllenChou.net
  Twitter - @TheAllenChou
*/
/******************************************************************************/

#pragma kernel Simplex1
#pragma kernel Simplex2
#pragma kernel Simplex3

#include "../SimplexNoise2D.cginc"
#include "../SimplexNoise3D.cginc"
#include "../RandomNoise.cginc"

RWStructuredBuffer<float> buffer;

float seed;
int3 dimension;
float3 scale;
float3 offset;
int numOctaves;
float octaveOffsetFactor;

[numthreads(1, 1, 1)]
void Simplex1(uint3 id : SV_DispatchThreadID)
{
  float2 s = scale.x * float2(id.x, 0.0f) + rand(seed);
  buffer[index(id, dimension)] = 
    snoise(s, float2(offset.x, 0.0), numOctaves, octaveOffsetFactor);
}

[numthreads(1, 1, 1)]
void Simplex2(uint3 id : SV_DispatchThreadID)
{
  float2 s = scale.xy * id.xy;
  buffer[index(id, dimension)] = 
   snoise(s, offset.xy, numOctaves, octaveOffsetFactor);
}

[numthreads(1, 1, 1)]
void Simplex3(uint3 id : SV_DispatchThreadID)
{
  float3 s = scale * id + rand(seed);
  buffer[index(id, dimension)] = 
    snoise(s, offset, numOctaves, octaveOffsetFactor);
}
